/* This file was generated by SableCC (http://www.sablecc.org/). */

package node;

import analysis.*;

@SuppressWarnings("nls")
public final class AExpOuLogica extends PLogica
{
    private PLogica _logica_;
    private TOu _ou_;
    private PItem _item_;

    public AExpOuLogica()
    {
        // Constructor
    }

    public AExpOuLogica(
        @SuppressWarnings("hiding") PLogica _logica_,
        @SuppressWarnings("hiding") TOu _ou_,
        @SuppressWarnings("hiding") PItem _item_)
    {
        // Constructor
        setLogica(_logica_);

        setOu(_ou_);

        setItem(_item_);

    }

    @Override
    public Object clone()
    {
        return new AExpOuLogica(
            cloneNode(this._logica_),
            cloneNode(this._ou_),
            cloneNode(this._item_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAExpOuLogica(this);
    }

    public PLogica getLogica()
    {
        return this._logica_;
    }

    public void setLogica(PLogica node)
    {
        if(this._logica_ != null)
        {
            this._logica_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._logica_ = node;
    }

    public TOu getOu()
    {
        return this._ou_;
    }

    public void setOu(TOu node)
    {
        if(this._ou_ != null)
        {
            this._ou_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._ou_ = node;
    }

    public PItem getItem()
    {
        return this._item_;
    }

    public void setItem(PItem node)
    {
        if(this._item_ != null)
        {
            this._item_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._item_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._logica_)
            + toString(this._ou_)
            + toString(this._item_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._logica_ == child)
        {
            this._logica_ = null;
            return;
        }

        if(this._ou_ == child)
        {
            this._ou_ = null;
            return;
        }

        if(this._item_ == child)
        {
            this._item_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._logica_ == oldChild)
        {
            setLogica((PLogica) newChild);
            return;
        }

        if(this._ou_ == oldChild)
        {
            setOu((TOu) newChild);
            return;
        }

        if(this._item_ == oldChild)
        {
            setItem((PItem) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
