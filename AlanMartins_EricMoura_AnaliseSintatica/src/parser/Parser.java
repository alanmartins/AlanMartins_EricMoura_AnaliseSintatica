/* This file was generated by SableCC (http://www.sablecc.org/). */

package parser;

import lexer.*;
import node.*;
import analysis.*;
import java.util.*;

import java.io.DataInputStream;
import java.io.BufferedInputStream;
import java.io.IOException;

@SuppressWarnings("nls")
public class Parser
{
    public final Analysis ignoredTokens = new AnalysisAdapter();

    protected ArrayList nodeList;

    private final Lexer lexer;
    private final ListIterator stack = new LinkedList().listIterator();
    private int last_pos;
    private int last_line;
    private Token last_token;
    private final TokenIndex converter = new TokenIndex();
    private final int[] action = new int[2];

    private final static int SHIFT = 0;
    private final static int REDUCE = 1;
    private final static int ACCEPT = 2;
    private final static int ERROR = 3;

    public Parser(@SuppressWarnings("hiding") Lexer lexer)
    {
        this.lexer = lexer;
    }

    @SuppressWarnings({"unchecked","unused"})
    private void push(int numstate, ArrayList listNode) throws ParserException, LexerException, IOException
    {
        this.nodeList = listNode;

        if(!this.stack.hasNext())
        {
            this.stack.add(new State(numstate, this.nodeList));
            return;
        }

        State s = (State) this.stack.next();
        s.state = numstate;
        s.nodes = this.nodeList;
    }

    private int goTo(int index)
    {
        int state = state();
        int low = 1;
        int high = gotoTable[index].length - 1;
        int value = gotoTable[index][0][1];

        while(low <= high)
        {
            int middle = (low + high) / 2;

            if(state < gotoTable[index][middle][0])
            {
                high = middle - 1;
            }
            else if(state > gotoTable[index][middle][0])
            {
                low = middle + 1;
            }
            else
            {
                value = gotoTable[index][middle][1];
                break;
            }
        }

        return value;
    }

    private int state()
    {
        State s = (State) this.stack.previous();
        this.stack.next();
        return s.state;
    }

    private ArrayList pop()
    {
        return ((State) this.stack.previous()).nodes;
    }

    private int index(Switchable token)
    {
        this.converter.index = -1;
        token.apply(this.converter);
        return this.converter.index;
    }

    @SuppressWarnings("unchecked")
    public Start parse() throws ParserException, LexerException, IOException
    {
        push(0, null);
        List<Node> ign = null;
        while(true)
        {
            while(index(this.lexer.peek()) == -1)
            {
                if(ign == null)
                {
                    ign = new LinkedList<Node>();
                }

                ign.add(this.lexer.next());
            }

            if(ign != null)
            {
                this.ignoredTokens.setIn(this.lexer.peek(), ign);
                ign = null;
            }

            this.last_pos = this.lexer.peek().getPos();
            this.last_line = this.lexer.peek().getLine();
            this.last_token = this.lexer.peek();

            int index = index(this.lexer.peek());
            this.action[0] = Parser.actionTable[state()][0][1];
            this.action[1] = Parser.actionTable[state()][0][2];

            int low = 1;
            int high = Parser.actionTable[state()].length - 1;

            while(low <= high)
            {
                int middle = (low + high) / 2;

                if(index < Parser.actionTable[state()][middle][0])
                {
                    high = middle - 1;
                }
                else if(index > Parser.actionTable[state()][middle][0])
                {
                    low = middle + 1;
                }
                else
                {
                    this.action[0] = Parser.actionTable[state()][middle][1];
                    this.action[1] = Parser.actionTable[state()][middle][2];
                    break;
                }
            }

            switch(this.action[0])
            {
                case SHIFT:
		    {
		        ArrayList list = new ArrayList();
		        list.add(this.lexer.next());
                        push(this.action[1], list);
                    }
		    break;
                case REDUCE:
                    switch(this.action[1])
                    {
                    case 0: /* reduce AProgram */
		    {
			ArrayList list = new0();
			push(goTo(0), list);
		    }
		    break;
                    case 1: /* reduce AUnicoDeclaracao */
		    {
			ArrayList list = new1();
			push(goTo(1), list);
		    }
		    break;
                    case 2: /* reduce AMultiploDeclaracao */
		    {
			ArrayList list = new2();
			push(goTo(1), list);
		    }
		    break;
                    case 3: /* reduce AConstDeclaracao */
		    {
			ArrayList list = new3();
			push(goTo(1), list);
		    }
		    break;
                    case 4: /* reduce AAmultiploid11VariavelDefinicao */
		    {
			ArrayList list = new4();
			push(goTo(2), list);
		    }
		    break;
                    case 5: /* reduce AAmultiploid21VariavelDefinicao */
		    {
			ArrayList list = new5();
			push(goTo(2), list);
		    }
		    break;
                    case 6: /* reduce AUnicoIdentificador */
		    {
			ArrayList list = new6();
			push(goTo(3), list);
		    }
		    break;
                    case 7: /* reduce AMultiploIdentificador */
		    {
			ArrayList list = new7();
			push(goTo(3), list);
		    }
		    break;
                    case 8: /* reduce AStringValor */
		    {
			ArrayList list = new8();
			push(goTo(4), list);
		    }
		    break;
                    case 9: /* reduce AInteiroValor */
		    {
			ArrayList list = new9();
			push(goTo(4), list);
		    }
		    break;
                    case 10: /* reduce ARealValor */
		    {
			ArrayList list = new10();
			push(goTo(4), list);
		    }
		    break;
                    case 11: /* reduce ATipoRealTipo */
		    {
			ArrayList list = new11();
			push(goTo(5), list);
		    }
		    break;
                    case 12: /* reduce ATipoIntTipo */
		    {
			ArrayList list = new12();
			push(goTo(5), list);
		    }
		    break;
                    case 13: /* reduce ATipoCaractereTipo */
		    {
			ArrayList list = new13();
			push(goTo(5), list);
		    }
		    break;
                    case 14: /* reduce AMultiIdentificador */
		    {
			ArrayList list = new14();
			push(goTo(6), list);
		    }
		    break;
                    case 15: /* reduce AUnicoComando */
		    {
			ArrayList list = new15();
			push(goTo(7), list);
		    }
		    break;
                    case 16: /* reduce AMultiploComando */
		    {
			ArrayList list = new16();
			push(goTo(7), list);
		    }
		    break;
                    case 17: /* reduce ADeclAtribuicaoDefinicaoComando */
		    {
			ArrayList list = new17();
			push(goTo(8), list);
		    }
		    break;
                    case 18: /* reduce AAtribuicaoExpLogicaDefinicaoComando */
		    {
			ArrayList list = new18();
			push(goTo(8), list);
		    }
		    break;
                    case 19: /* reduce ADeclLeia$Amultiploid11DefinicaoComando */
		    {
			ArrayList list = new19();
			push(goTo(8), list);
		    }
		    break;
                    case 20: /* reduce ADeclLeia$Amultiploid21DefinicaoComando */
		    {
			ArrayList list = new20();
			push(goTo(8), list);
		    }
		    break;
                    case 21: /* reduce ADeclEscreva$Amultiplaexp11DefinicaoComando */
		    {
			ArrayList list = new21();
			push(goTo(8), list);
		    }
		    break;
                    case 22: /* reduce ADeclEscreva$Amultiplaexp21DefinicaoComando */
		    {
			ArrayList list = new22();
			push(goTo(8), list);
		    }
		    break;
                    case 23: /* reduce AEscrevaExpLogica$Amultiplaexp11DefinicaoComando */
		    {
			ArrayList list = new23();
			push(goTo(8), list);
		    }
		    break;
                    case 24: /* reduce AEscrevaExpLogica$Amultiplaexp21DefinicaoComando */
		    {
			ArrayList list = new24();
			push(goTo(8), list);
		    }
		    break;
                    case 25: /* reduce ADeclAvalieDefinicaoComando */
		    {
			ArrayList list = new25();
			push(goTo(8), list);
		    }
		    break;
                    case 26: /* reduce AAvalieExpLogicaDefinicaoComando */
		    {
			ArrayList list = new26();
			push(goTo(8), list);
		    }
		    break;
                    case 27: /* reduce ADeclEnquantoDefinicaoComando */
		    {
			ArrayList list = new27();
			push(goTo(8), list);
		    }
		    break;
                    case 28: /* reduce ADeclRepitaDefinicaoComando */
		    {
			ArrayList list = new28();
			push(goTo(8), list);
		    }
		    break;
                    case 29: /* reduce ADeclParaAteDefinicaoComando */
		    {
			ArrayList list = new29();
			push(goTo(8), list);
		    }
		    break;
                    case 30: /* reduce ADeclParaPassoDefinicaoComando */
		    {
			ArrayList list = new30();
			push(goTo(8), list);
		    }
		    break;
                    case 31: /* reduce ADeclSeDefinicaoComando */
		    {
			ArrayList list = new31();
			push(goTo(8), list);
		    }
		    break;
                    case 32: /* reduce AAopcionalsenaose1OpcionalSenaoSe */
		    {
			ArrayList list = new32();
			push(goTo(9), list);
		    }
		    break;
                    case 33: /* reduce AAopcionalsenaose2OpcionalSenaoSe */
		    {
			ArrayList list = new33();
			push(goTo(9), list);
		    }
		    break;
                    case 34: /* reduce ASenaoSe */
		    {
			ArrayList list = new34();
			push(goTo(10), list);
		    }
		    break;
                    case 35: /* reduce AAopcionalsenaocaso1OpcionalSenaoCaso */
		    {
			ArrayList list = new35();
			push(goTo(11), list);
		    }
		    break;
                    case 36: /* reduce AAopcionalsenaocaso2OpcionalSenaoCaso */
		    {
			ArrayList list = new36();
			push(goTo(11), list);
		    }
		    break;
                    case 37: /* reduce ASenaoCaso */
		    {
			ArrayList list = new37();
			push(goTo(12), list);
		    }
		    break;
                    case 38: /* reduce AAmultiplocaso1MultiploCaso */
		    {
			ArrayList list = new38();
			push(goTo(13), list);
		    }
		    break;
                    case 39: /* reduce AAmultiplocaso2MultiploCaso */
		    {
			ArrayList list = new39();
			push(goTo(13), list);
		    }
		    break;
                    case 40: /* reduce ADefinicaoCaso */
		    {
			ArrayList list = new40();
			push(goTo(14), list);
		    }
		    break;
                    case 41: /* reduce AExpAritMultiExp */
		    {
			ArrayList list = new41();
			push(goTo(15), list);
		    }
		    break;
                    case 42: /* reduce AExpressaoLogicaMultiExp */
		    {
			ArrayList list = new42();
			push(goTo(15), list);
		    }
		    break;
                    case 43: /* reduce AMenosUnarioExp */
		    {
			ArrayList list = new43();
			push(goTo(16), list);
		    }
		    break;
                    case 44: /* reduce AExpressaoExp */
		    {
			ArrayList list = new44();
			push(goTo(16), list);
		    }
		    break;
                    case 45: /* reduce ATermoExpressao */
		    {
			ArrayList list = new45();
			push(goTo(17), list);
		    }
		    break;
                    case 46: /* reduce AMaisExpressao */
		    {
			ArrayList list = new46();
			push(goTo(17), list);
		    }
		    break;
                    case 47: /* reduce AMenosExpressao */
		    {
			ArrayList list = new47();
			push(goTo(17), list);
		    }
		    break;
                    case 48: /* reduce AFatorTermo */
		    {
			ArrayList list = new48();
			push(goTo(18), list);
		    }
		    break;
                    case 49: /* reduce AMultiplicacaoTermo */
		    {
			ArrayList list = new49();
			push(goTo(18), list);
		    }
		    break;
                    case 50: /* reduce ADivisaoTermo */
		    {
			ArrayList list = new50();
			push(goTo(18), list);
		    }
		    break;
                    case 51: /* reduce AIdentificadorFator */
		    {
			ArrayList list = new51();
			push(goTo(19), list);
		    }
		    break;
                    case 52: /* reduce AValorFator */
		    {
			ArrayList list = new52();
			push(goTo(19), list);
		    }
		    break;
                    case 53: /* reduce AExpFator */
		    {
			ArrayList list = new53();
			push(goTo(19), list);
		    }
		    break;
                    case 54: /* reduce ANegacaoExpLogica */
		    {
			ArrayList list = new54();
			push(goTo(20), list);
		    }
		    break;
                    case 55: /* reduce ALogicaExpLogica */
		    {
			ArrayList list = new55();
			push(goTo(20), list);
		    }
		    break;
                    case 56: /* reduce AExpOuLogica */
		    {
			ArrayList list = new56();
			push(goTo(21), list);
		    }
		    break;
                    case 57: /* reduce AItemOuLogica */
		    {
			ArrayList list = new57();
			push(goTo(21), list);
		    }
		    break;
                    case 58: /* reduce AExpXouItem */
		    {
			ArrayList list = new58();
			push(goTo(22), list);
		    }
		    break;
                    case 59: /* reduce AItemXouItem */
		    {
			ArrayList list = new59();
			push(goTo(22), list);
		    }
		    break;
                    case 60: /* reduce AExpELogTermo */
		    {
			ArrayList list = new60();
			push(goTo(23), list);
		    }
		    break;
                    case 61: /* reduce ARelacioLogTermo */
		    {
			ArrayList list = new61();
			push(goTo(23), list);
		    }
		    break;
                    case 62: /* reduce AExpParLogTermo */
		    {
			ArrayList list = new62();
			push(goTo(23), list);
		    }
		    break;
                    case 63: /* reduce ARelacionalRelacional */
		    {
			ArrayList list = new63();
			push(goTo(24), list);
		    }
		    break;
                    case 64: /* reduce AIgualOperadores */
		    {
			ArrayList list = new64();
			push(goTo(25), list);
		    }
		    break;
                    case 65: /* reduce ADiferenteOperadores */
		    {
			ArrayList list = new65();
			push(goTo(25), list);
		    }
		    break;
                    case 66: /* reduce AOperadores */
		    {
			ArrayList list = new66();
			push(goTo(25), list);
		    }
		    break;
                    case 67: /* reduce AMenorOper */
		    {
			ArrayList list = new67();
			push(goTo(26), list);
		    }
		    break;
                    case 68: /* reduce AMaiorOper */
		    {
			ArrayList list = new68();
			push(goTo(26), list);
		    }
		    break;
                    case 69: /* reduce AMenorIgualOper */
		    {
			ArrayList list = new69();
			push(goTo(26), list);
		    }
		    break;
                    case 70: /* reduce AMaiorIgualOper */
		    {
			ArrayList list = new70();
			push(goTo(26), list);
		    }
		    break;
                    case 71: /* reduce ATerminal$MultiIdentificador */
		    {
			ArrayList list = new71();
			push(goTo(27), list);
		    }
		    break;
                    case 72: /* reduce ANonTerminal$MultiIdentificador */
		    {
			ArrayList list = new72();
			push(goTo(27), list);
		    }
		    break;
                    case 73: /* reduce ATerminal$DefinicaoCaso */
		    {
			ArrayList list = new73();
			push(goTo(28), list);
		    }
		    break;
                    case 74: /* reduce ANonTerminal$DefinicaoCaso */
		    {
			ArrayList list = new74();
			push(goTo(28), list);
		    }
		    break;
                    case 75: /* reduce ATerminal$MultiExp */
		    {
			ArrayList list = new75();
			push(goTo(29), list);
		    }
		    break;
                    case 76: /* reduce ANonTerminal$MultiExp */
		    {
			ArrayList list = new76();
			push(goTo(29), list);
		    }
		    break;
                    }
                    break;
                case ACCEPT:
                    {
                        EOF node2 = (EOF) this.lexer.next();
                        PProgram node1 = (PProgram) pop().get(0);
                        Start node = new Start(node1, node2);
                        return node;
                    }
                case ERROR:
                    throw new ParserException(this.last_token,
                        "[" + this.last_line + "," + this.last_pos + "] " +
                        Parser.errorMessages[Parser.errors[this.action[1]]]);
            }
        }
    }



    @SuppressWarnings("unchecked")
    ArrayList new0() /* reduce AProgram */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PProgram pprogramNode1;
        {
            // Block
        TPrograma tprogramaNode2;
        TId tidNode3;
        TInicio tinicioNode4;
        PDeclaracao pdeclaracaoNode5;
        PComando pcomandoNode6;
        TFim tfimNode7;
        tprogramaNode2 = (TPrograma)nodeArrayList1.get(0);
        tidNode3 = (TId)nodeArrayList2.get(0);
        tinicioNode4 = (TInicio)nodeArrayList3.get(0);
        pdeclaracaoNode5 = (PDeclaracao)nodeArrayList4.get(0);
        pcomandoNode6 = (PComando)nodeArrayList5.get(0);
        tfimNode7 = (TFim)nodeArrayList6.get(0);

        pprogramNode1 = new AProgram(tprogramaNode2, tidNode3, tinicioNode4, pdeclaracaoNode5, pcomandoNode6, tfimNode7);
        }
	nodeList.add(pprogramNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new1() /* reduce AUnicoDeclaracao */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PDeclaracao pdeclaracaoNode1;
        {
            // Block
        PVariavelDefinicao pvariaveldefinicaoNode2;
        pvariaveldefinicaoNode2 = (PVariavelDefinicao)nodeArrayList1.get(0);

        pdeclaracaoNode1 = new AUnicoDeclaracao(pvariaveldefinicaoNode2);
        }
	nodeList.add(pdeclaracaoNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new2() /* reduce AMultiploDeclaracao */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PDeclaracao pdeclaracaoNode1;
        {
            // Block
        PDeclaracao pdeclaracaoNode2;
        PVariavelDefinicao pvariaveldefinicaoNode3;
        pdeclaracaoNode2 = (PDeclaracao)nodeArrayList1.get(0);
        pvariaveldefinicaoNode3 = (PVariavelDefinicao)nodeArrayList2.get(0);

        pdeclaracaoNode1 = new AMultiploDeclaracao(pdeclaracaoNode2, pvariaveldefinicaoNode3);
        }
	nodeList.add(pdeclaracaoNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new3() /* reduce AConstDeclaracao */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PDeclaracao pdeclaracaoNode1;
        {
            // Block
        TConstante tconstanteNode2;
        PIdentificador pidentificadorNode3;
        PValor pvalorNode4;
        TPontoVirgula tpontovirgulaNode5;
        tconstanteNode2 = (TConstante)nodeArrayList1.get(0);
        pidentificadorNode3 = (PIdentificador)nodeArrayList2.get(0);
        pvalorNode4 = (PValor)nodeArrayList3.get(0);
        tpontovirgulaNode5 = (TPontoVirgula)nodeArrayList4.get(0);

        pdeclaracaoNode1 = new AConstDeclaracao(tconstanteNode2, pidentificadorNode3, pvalorNode4, tpontovirgulaNode5);
        }
	nodeList.add(pdeclaracaoNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new4() /* reduce AAmultiploid11VariavelDefinicao */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PVariavelDefinicao pvariaveldefinicaoNode1;
        {
            // Block
        PTipo ptipoNode2;
        TDoisPontos tdoispontosNode3;
        PMultiploId pmultiploidNode4;
        PIdentificador pidentificadorNode6;
        TPontoVirgula tpontovirgulaNode7;
        ptipoNode2 = (PTipo)nodeArrayList1.get(0);
        tdoispontosNode3 = (TDoisPontos)nodeArrayList2.get(0);
        {
            // Block
        LinkedList listNode5 = new LinkedList();
        {
            // Block
        }

        pmultiploidNode4 = new AMultiploId(listNode5);
        }
        pidentificadorNode6 = (PIdentificador)nodeArrayList3.get(0);
        tpontovirgulaNode7 = (TPontoVirgula)nodeArrayList4.get(0);

        pvariaveldefinicaoNode1 = new AVariavelDefinicao(ptipoNode2, tdoispontosNode3, pmultiploidNode4, pidentificadorNode6, tpontovirgulaNode7);
        }
	nodeList.add(pvariaveldefinicaoNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new5() /* reduce AAmultiploid21VariavelDefinicao */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PVariavelDefinicao pvariaveldefinicaoNode1;
        {
            // Block
        PTipo ptipoNode2;
        TDoisPontos tdoispontosNode3;
        PMultiploId pmultiploidNode4;
        PIdentificador pidentificadorNode7;
        TPontoVirgula tpontovirgulaNode8;
        ptipoNode2 = (PTipo)nodeArrayList1.get(0);
        tdoispontosNode3 = (TDoisPontos)nodeArrayList2.get(0);
        {
            // Block
        LinkedList listNode6 = new LinkedList();
        {
            // Block
        LinkedList listNode5 = new LinkedList();
        listNode5 = (LinkedList)nodeArrayList3.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }

        pmultiploidNode4 = new AMultiploId(listNode6);
        }
        pidentificadorNode7 = (PIdentificador)nodeArrayList4.get(0);
        tpontovirgulaNode8 = (TPontoVirgula)nodeArrayList5.get(0);

        pvariaveldefinicaoNode1 = new AVariavelDefinicao(ptipoNode2, tdoispontosNode3, pmultiploidNode4, pidentificadorNode7, tpontovirgulaNode8);
        }
	nodeList.add(pvariaveldefinicaoNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new6() /* reduce AUnicoIdentificador */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PIdentificador pidentificadorNode1;
        {
            // Block
        TId tidNode2;
        tidNode2 = (TId)nodeArrayList1.get(0);

        pidentificadorNode1 = new AUnicoIdentificador(tidNode2);
        }
	nodeList.add(pidentificadorNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new7() /* reduce AMultiploIdentificador */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PIdentificador pidentificadorNode1;
        {
            // Block
        TId tidNode2;
        TLColc tlcolcNode3;
        TNumInteiro tnuminteiroNode4;
        TRColc trcolcNode5;
        tidNode2 = (TId)nodeArrayList1.get(0);
        tlcolcNode3 = (TLColc)nodeArrayList2.get(0);
        tnuminteiroNode4 = (TNumInteiro)nodeArrayList3.get(0);
        trcolcNode5 = (TRColc)nodeArrayList4.get(0);

        pidentificadorNode1 = new AMultiploIdentificador(tidNode2, tlcolcNode3, tnuminteiroNode4, trcolcNode5);
        }
	nodeList.add(pidentificadorNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new8() /* reduce AStringValor */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PValor pvalorNode1;
        {
            // Block
        TString tstringNode2;
        tstringNode2 = (TString)nodeArrayList1.get(0);

        pvalorNode1 = new AStringValor(tstringNode2);
        }
	nodeList.add(pvalorNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new9() /* reduce AInteiroValor */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PValor pvalorNode1;
        {
            // Block
        TNumInteiro tnuminteiroNode2;
        tnuminteiroNode2 = (TNumInteiro)nodeArrayList1.get(0);

        pvalorNode1 = new AInteiroValor(tnuminteiroNode2);
        }
	nodeList.add(pvalorNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new10() /* reduce ARealValor */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PValor pvalorNode1;
        {
            // Block
        TNumReal tnumrealNode2;
        tnumrealNode2 = (TNumReal)nodeArrayList1.get(0);

        pvalorNode1 = new ARealValor(tnumrealNode2);
        }
	nodeList.add(pvalorNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new11() /* reduce ATipoRealTipo */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTipo ptipoNode1;
        {
            // Block
        TReal trealNode2;
        trealNode2 = (TReal)nodeArrayList1.get(0);

        ptipoNode1 = new ATipoRealTipo(trealNode2);
        }
	nodeList.add(ptipoNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new12() /* reduce ATipoIntTipo */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTipo ptipoNode1;
        {
            // Block
        TInteiro tinteiroNode2;
        tinteiroNode2 = (TInteiro)nodeArrayList1.get(0);

        ptipoNode1 = new ATipoIntTipo(tinteiroNode2);
        }
	nodeList.add(ptipoNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new13() /* reduce ATipoCaractereTipo */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTipo ptipoNode1;
        {
            // Block
        TCaractere tcaractereNode2;
        tcaractereNode2 = (TCaractere)nodeArrayList1.get(0);

        ptipoNode1 = new ATipoCaractereTipo(tcaractereNode2);
        }
	nodeList.add(ptipoNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new14() /* reduce AMultiIdentificador */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PMultiIdentificador pmultiidentificadorNode1;
        {
            // Block
        PIdentificador pidentificadorNode2;
        TVirgula tvirgulaNode3;
        pidentificadorNode2 = (PIdentificador)nodeArrayList1.get(0);
        tvirgulaNode3 = (TVirgula)nodeArrayList2.get(0);

        pmultiidentificadorNode1 = new AMultiIdentificador(pidentificadorNode2, tvirgulaNode3);
        }
	nodeList.add(pmultiidentificadorNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new15() /* reduce AUnicoComando */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        PDefinicaoComando pdefinicaocomandoNode2;
        pdefinicaocomandoNode2 = (PDefinicaoComando)nodeArrayList1.get(0);

        pcomandoNode1 = new AUnicoComando(pdefinicaocomandoNode2);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new16() /* reduce AMultiploComando */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        PComando pcomandoNode2;
        PDefinicaoComando pdefinicaocomandoNode3;
        pcomandoNode2 = (PComando)nodeArrayList1.get(0);
        pdefinicaocomandoNode3 = (PDefinicaoComando)nodeArrayList2.get(0);

        pcomandoNode1 = new AMultiploComando(pcomandoNode2, pdefinicaocomandoNode3);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new17() /* reduce ADeclAtribuicaoDefinicaoComando */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PDefinicaoComando pdefinicaocomandoNode1;
        {
            // Block
        PIdentificador pidentificadorNode2;
        TAtribuicao tatribuicaoNode3;
        PExp pexpNode4;
        TPontoVirgula tpontovirgulaNode5;
        pidentificadorNode2 = (PIdentificador)nodeArrayList1.get(0);
        tatribuicaoNode3 = (TAtribuicao)nodeArrayList2.get(0);
        pexpNode4 = (PExp)nodeArrayList3.get(0);
        tpontovirgulaNode5 = (TPontoVirgula)nodeArrayList4.get(0);

        pdefinicaocomandoNode1 = new ADeclAtribuicaoDefinicaoComando(pidentificadorNode2, tatribuicaoNode3, pexpNode4, tpontovirgulaNode5);
        }
	nodeList.add(pdefinicaocomandoNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new18() /* reduce AAtribuicaoExpLogicaDefinicaoComando */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PDefinicaoComando pdefinicaocomandoNode1;
        {
            // Block
        PIdentificador pidentificadorNode2;
        TAtribuicao tatribuicaoNode3;
        PExpLogica pexplogicaNode4;
        TPontoVirgula tpontovirgulaNode5;
        pidentificadorNode2 = (PIdentificador)nodeArrayList1.get(0);
        tatribuicaoNode3 = (TAtribuicao)nodeArrayList2.get(0);
        pexplogicaNode4 = (PExpLogica)nodeArrayList3.get(0);
        tpontovirgulaNode5 = (TPontoVirgula)nodeArrayList4.get(0);

        pdefinicaocomandoNode1 = new AAtribuicaoExpLogicaDefinicaoComando(pidentificadorNode2, tatribuicaoNode3, pexplogicaNode4, tpontovirgulaNode5);
        }
	nodeList.add(pdefinicaocomandoNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new19() /* reduce ADeclLeia$Amultiploid11DefinicaoComando */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PDefinicaoComando pdefinicaocomandoNode1;
        {
            // Block
        TLeia tleiaNode2;
        TLPar tlparNode3;
        PMultiploId pmultiploidNode4;
        PIdentificador pidentificadorNode6;
        TRPar trparNode7;
        TPontoVirgula tpontovirgulaNode8;
        tleiaNode2 = (TLeia)nodeArrayList1.get(0);
        tlparNode3 = (TLPar)nodeArrayList2.get(0);
        {
            // Block
        LinkedList listNode5 = new LinkedList();
        {
            // Block
        }

        pmultiploidNode4 = new AMultiploId(listNode5);
        }
        pidentificadorNode6 = (PIdentificador)nodeArrayList3.get(0);
        trparNode7 = (TRPar)nodeArrayList4.get(0);
        tpontovirgulaNode8 = (TPontoVirgula)nodeArrayList5.get(0);

        pdefinicaocomandoNode1 = new ADeclLeiaDefinicaoComando(tleiaNode2, tlparNode3, pmultiploidNode4, pidentificadorNode6, trparNode7, tpontovirgulaNode8);
        }
	nodeList.add(pdefinicaocomandoNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new20() /* reduce ADeclLeia$Amultiploid21DefinicaoComando */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PDefinicaoComando pdefinicaocomandoNode1;
        {
            // Block
        TLeia tleiaNode2;
        TLPar tlparNode3;
        PMultiploId pmultiploidNode4;
        PIdentificador pidentificadorNode7;
        TRPar trparNode8;
        TPontoVirgula tpontovirgulaNode9;
        tleiaNode2 = (TLeia)nodeArrayList1.get(0);
        tlparNode3 = (TLPar)nodeArrayList2.get(0);
        {
            // Block
        LinkedList listNode6 = new LinkedList();
        {
            // Block
        LinkedList listNode5 = new LinkedList();
        listNode5 = (LinkedList)nodeArrayList3.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }

        pmultiploidNode4 = new AMultiploId(listNode6);
        }
        pidentificadorNode7 = (PIdentificador)nodeArrayList4.get(0);
        trparNode8 = (TRPar)nodeArrayList5.get(0);
        tpontovirgulaNode9 = (TPontoVirgula)nodeArrayList6.get(0);

        pdefinicaocomandoNode1 = new ADeclLeiaDefinicaoComando(tleiaNode2, tlparNode3, pmultiploidNode4, pidentificadorNode7, trparNode8, tpontovirgulaNode9);
        }
	nodeList.add(pdefinicaocomandoNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new21() /* reduce ADeclEscreva$Amultiplaexp11DefinicaoComando */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PDefinicaoComando pdefinicaocomandoNode1;
        {
            // Block
        TEscreva tescrevaNode2;
        TLPar tlparNode3;
        PMultiplaExp pmultiplaexpNode4;
        PExp pexpNode6;
        TRPar trparNode7;
        TPontoVirgula tpontovirgulaNode8;
        tescrevaNode2 = (TEscreva)nodeArrayList1.get(0);
        tlparNode3 = (TLPar)nodeArrayList2.get(0);
        {
            // Block
        LinkedList listNode5 = new LinkedList();
        {
            // Block
        }

        pmultiplaexpNode4 = new AMultiplaExp(listNode5);
        }
        pexpNode6 = (PExp)nodeArrayList3.get(0);
        trparNode7 = (TRPar)nodeArrayList4.get(0);
        tpontovirgulaNode8 = (TPontoVirgula)nodeArrayList5.get(0);

        pdefinicaocomandoNode1 = new ADeclEscrevaDefinicaoComando(tescrevaNode2, tlparNode3, pmultiplaexpNode4, pexpNode6, trparNode7, tpontovirgulaNode8);
        }
	nodeList.add(pdefinicaocomandoNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new22() /* reduce ADeclEscreva$Amultiplaexp21DefinicaoComando */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PDefinicaoComando pdefinicaocomandoNode1;
        {
            // Block
        TEscreva tescrevaNode2;
        TLPar tlparNode3;
        PMultiplaExp pmultiplaexpNode4;
        PExp pexpNode7;
        TRPar trparNode8;
        TPontoVirgula tpontovirgulaNode9;
        tescrevaNode2 = (TEscreva)nodeArrayList1.get(0);
        tlparNode3 = (TLPar)nodeArrayList2.get(0);
        {
            // Block
        LinkedList listNode6 = new LinkedList();
        {
            // Block
        LinkedList listNode5 = new LinkedList();
        listNode5 = (LinkedList)nodeArrayList3.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }

        pmultiplaexpNode4 = new AMultiplaExp(listNode6);
        }
        pexpNode7 = (PExp)nodeArrayList4.get(0);
        trparNode8 = (TRPar)nodeArrayList5.get(0);
        tpontovirgulaNode9 = (TPontoVirgula)nodeArrayList6.get(0);

        pdefinicaocomandoNode1 = new ADeclEscrevaDefinicaoComando(tescrevaNode2, tlparNode3, pmultiplaexpNode4, pexpNode7, trparNode8, tpontovirgulaNode9);
        }
	nodeList.add(pdefinicaocomandoNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new23() /* reduce AEscrevaExpLogica$Amultiplaexp11DefinicaoComando */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PDefinicaoComando pdefinicaocomandoNode1;
        {
            // Block
        TEscreva tescrevaNode2;
        TLPar tlparNode3;
        PMultiplaExp pmultiplaexpNode4;
        PExpLogica pexplogicaNode6;
        TRPar trparNode7;
        TPontoVirgula tpontovirgulaNode8;
        tescrevaNode2 = (TEscreva)nodeArrayList1.get(0);
        tlparNode3 = (TLPar)nodeArrayList2.get(0);
        {
            // Block
        LinkedList listNode5 = new LinkedList();
        {
            // Block
        }

        pmultiplaexpNode4 = new AMultiplaExp(listNode5);
        }
        pexplogicaNode6 = (PExpLogica)nodeArrayList3.get(0);
        trparNode7 = (TRPar)nodeArrayList4.get(0);
        tpontovirgulaNode8 = (TPontoVirgula)nodeArrayList5.get(0);

        pdefinicaocomandoNode1 = new AEscrevaExpLogicaDefinicaoComando(tescrevaNode2, tlparNode3, pmultiplaexpNode4, pexplogicaNode6, trparNode7, tpontovirgulaNode8);
        }
	nodeList.add(pdefinicaocomandoNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new24() /* reduce AEscrevaExpLogica$Amultiplaexp21DefinicaoComando */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PDefinicaoComando pdefinicaocomandoNode1;
        {
            // Block
        TEscreva tescrevaNode2;
        TLPar tlparNode3;
        PMultiplaExp pmultiplaexpNode4;
        PExpLogica pexplogicaNode7;
        TRPar trparNode8;
        TPontoVirgula tpontovirgulaNode9;
        tescrevaNode2 = (TEscreva)nodeArrayList1.get(0);
        tlparNode3 = (TLPar)nodeArrayList2.get(0);
        {
            // Block
        LinkedList listNode6 = new LinkedList();
        {
            // Block
        LinkedList listNode5 = new LinkedList();
        listNode5 = (LinkedList)nodeArrayList3.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }

        pmultiplaexpNode4 = new AMultiplaExp(listNode6);
        }
        pexplogicaNode7 = (PExpLogica)nodeArrayList4.get(0);
        trparNode8 = (TRPar)nodeArrayList5.get(0);
        tpontovirgulaNode9 = (TPontoVirgula)nodeArrayList6.get(0);

        pdefinicaocomandoNode1 = new AEscrevaExpLogicaDefinicaoComando(tescrevaNode2, tlparNode3, pmultiplaexpNode4, pexplogicaNode7, trparNode8, tpontovirgulaNode9);
        }
	nodeList.add(pdefinicaocomandoNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new25() /* reduce ADeclAvalieDefinicaoComando */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PDefinicaoComando pdefinicaocomandoNode1;
        {
            // Block
        TAvalie tavalieNode2;
        TLPar tlparNode3;
        PExp pexpNode4;
        TRPar trparNode5;
        PMultiploCaso pmultiplocasoNode6;
        POpcionalSenaoCaso popcionalsenaocasoNode7;
        TFimAvalie tfimavalieNode8;
        TPontoVirgula tpontovirgulaNode9;
        tavalieNode2 = (TAvalie)nodeArrayList1.get(0);
        tlparNode3 = (TLPar)nodeArrayList2.get(0);
        pexpNode4 = (PExp)nodeArrayList3.get(0);
        trparNode5 = (TRPar)nodeArrayList4.get(0);
        pmultiplocasoNode6 = (PMultiploCaso)nodeArrayList5.get(0);
        popcionalsenaocasoNode7 = (POpcionalSenaoCaso)nodeArrayList6.get(0);
        tfimavalieNode8 = (TFimAvalie)nodeArrayList7.get(0);
        tpontovirgulaNode9 = (TPontoVirgula)nodeArrayList8.get(0);

        pdefinicaocomandoNode1 = new ADeclAvalieDefinicaoComando(tavalieNode2, tlparNode3, pexpNode4, trparNode5, pmultiplocasoNode6, popcionalsenaocasoNode7, tfimavalieNode8, tpontovirgulaNode9);
        }
	nodeList.add(pdefinicaocomandoNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new26() /* reduce AAvalieExpLogicaDefinicaoComando */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PDefinicaoComando pdefinicaocomandoNode1;
        {
            // Block
        TAvalie tavalieNode2;
        TLPar tlparNode3;
        PExpLogica pexplogicaNode4;
        TRPar trparNode5;
        PMultiploCaso pmultiplocasoNode6;
        POpcionalSenaoCaso popcionalsenaocasoNode7;
        TFimAvalie tfimavalieNode8;
        TPontoVirgula tpontovirgulaNode9;
        tavalieNode2 = (TAvalie)nodeArrayList1.get(0);
        tlparNode3 = (TLPar)nodeArrayList2.get(0);
        pexplogicaNode4 = (PExpLogica)nodeArrayList3.get(0);
        trparNode5 = (TRPar)nodeArrayList4.get(0);
        pmultiplocasoNode6 = (PMultiploCaso)nodeArrayList5.get(0);
        popcionalsenaocasoNode7 = (POpcionalSenaoCaso)nodeArrayList6.get(0);
        tfimavalieNode8 = (TFimAvalie)nodeArrayList7.get(0);
        tpontovirgulaNode9 = (TPontoVirgula)nodeArrayList8.get(0);

        pdefinicaocomandoNode1 = new AAvalieExpLogicaDefinicaoComando(tavalieNode2, tlparNode3, pexplogicaNode4, trparNode5, pmultiplocasoNode6, popcionalsenaocasoNode7, tfimavalieNode8, tpontovirgulaNode9);
        }
	nodeList.add(pdefinicaocomandoNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new27() /* reduce ADeclEnquantoDefinicaoComando */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PDefinicaoComando pdefinicaocomandoNode1;
        {
            // Block
        TEnquanto tenquantoNode2;
        TLPar tlparNode3;
        PExpLogica pexplogicaNode4;
        TRPar trparNode5;
        TFaca tfacaNode6;
        PComando pcomandoNode7;
        TFimEnquanto tfimenquantoNode8;
        TPontoVirgula tpontovirgulaNode9;
        tenquantoNode2 = (TEnquanto)nodeArrayList1.get(0);
        tlparNode3 = (TLPar)nodeArrayList2.get(0);
        pexplogicaNode4 = (PExpLogica)nodeArrayList3.get(0);
        trparNode5 = (TRPar)nodeArrayList4.get(0);
        tfacaNode6 = (TFaca)nodeArrayList5.get(0);
        pcomandoNode7 = (PComando)nodeArrayList6.get(0);
        tfimenquantoNode8 = (TFimEnquanto)nodeArrayList7.get(0);
        tpontovirgulaNode9 = (TPontoVirgula)nodeArrayList8.get(0);

        pdefinicaocomandoNode1 = new ADeclEnquantoDefinicaoComando(tenquantoNode2, tlparNode3, pexplogicaNode4, trparNode5, tfacaNode6, pcomandoNode7, tfimenquantoNode8, tpontovirgulaNode9);
        }
	nodeList.add(pdefinicaocomandoNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new28() /* reduce ADeclRepitaDefinicaoComando */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PDefinicaoComando pdefinicaocomandoNode1;
        {
            // Block
        TRepita trepitaNode2;
        PComando pcomandoNode3;
        TAte tateNode4;
        TLPar tlparNode5;
        PExpLogica pexplogicaNode6;
        TRPar trparNode7;
        TPontoVirgula tpontovirgulaNode8;
        trepitaNode2 = (TRepita)nodeArrayList1.get(0);
        pcomandoNode3 = (PComando)nodeArrayList2.get(0);
        tateNode4 = (TAte)nodeArrayList3.get(0);
        tlparNode5 = (TLPar)nodeArrayList4.get(0);
        pexplogicaNode6 = (PExpLogica)nodeArrayList5.get(0);
        trparNode7 = (TRPar)nodeArrayList6.get(0);
        tpontovirgulaNode8 = (TPontoVirgula)nodeArrayList7.get(0);

        pdefinicaocomandoNode1 = new ADeclRepitaDefinicaoComando(trepitaNode2, pcomandoNode3, tateNode4, tlparNode5, pexplogicaNode6, trparNode7, tpontovirgulaNode8);
        }
	nodeList.add(pdefinicaocomandoNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new29() /* reduce ADeclParaAteDefinicaoComando */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList10 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PDefinicaoComando pdefinicaocomandoNode1;
        {
            // Block
        TPara tparaNode2;
        PIdentificador pidentificadorNode3;
        TDe tdeNode4;
        TNumInteiro tnuminteiroNode5;
        TAte tateNode6;
        TNumInteiro tnuminteiroNode7;
        TFaca tfacaNode8;
        PComando pcomandoNode9;
        TFimPara tfimparaNode10;
        TPontoVirgula tpontovirgulaNode11;
        tparaNode2 = (TPara)nodeArrayList1.get(0);
        pidentificadorNode3 = (PIdentificador)nodeArrayList2.get(0);
        tdeNode4 = (TDe)nodeArrayList3.get(0);
        tnuminteiroNode5 = (TNumInteiro)nodeArrayList4.get(0);
        tateNode6 = (TAte)nodeArrayList5.get(0);
        tnuminteiroNode7 = (TNumInteiro)nodeArrayList6.get(0);
        tfacaNode8 = (TFaca)nodeArrayList7.get(0);
        pcomandoNode9 = (PComando)nodeArrayList8.get(0);
        tfimparaNode10 = (TFimPara)nodeArrayList9.get(0);
        tpontovirgulaNode11 = (TPontoVirgula)nodeArrayList10.get(0);

        pdefinicaocomandoNode1 = new ADeclParaAteDefinicaoComando(tparaNode2, pidentificadorNode3, tdeNode4, tnuminteiroNode5, tateNode6, tnuminteiroNode7, tfacaNode8, pcomandoNode9, tfimparaNode10, tpontovirgulaNode11);
        }
	nodeList.add(pdefinicaocomandoNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new30() /* reduce ADeclParaPassoDefinicaoComando */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList12 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList11 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList10 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PDefinicaoComando pdefinicaocomandoNode1;
        {
            // Block
        TPara tparaNode2;
        PIdentificador pidentificadorNode3;
        TDe tdeNode4;
        TNumInteiro tnuminteiroNode5;
        TPasso tpassoNode6;
        TNumInteiro tnuminteiroNode7;
        TAte tateNode8;
        TNumInteiro tnuminteiroNode9;
        TFaca tfacaNode10;
        PComando pcomandoNode11;
        TFimPara tfimparaNode12;
        TPontoVirgula tpontovirgulaNode13;
        tparaNode2 = (TPara)nodeArrayList1.get(0);
        pidentificadorNode3 = (PIdentificador)nodeArrayList2.get(0);
        tdeNode4 = (TDe)nodeArrayList3.get(0);
        tnuminteiroNode5 = (TNumInteiro)nodeArrayList4.get(0);
        tpassoNode6 = (TPasso)nodeArrayList5.get(0);
        tnuminteiroNode7 = (TNumInteiro)nodeArrayList6.get(0);
        tateNode8 = (TAte)nodeArrayList7.get(0);
        tnuminteiroNode9 = (TNumInteiro)nodeArrayList8.get(0);
        tfacaNode10 = (TFaca)nodeArrayList9.get(0);
        pcomandoNode11 = (PComando)nodeArrayList10.get(0);
        tfimparaNode12 = (TFimPara)nodeArrayList11.get(0);
        tpontovirgulaNode13 = (TPontoVirgula)nodeArrayList12.get(0);

        pdefinicaocomandoNode1 = new ADeclParaPassoDefinicaoComando(tparaNode2, pidentificadorNode3, tdeNode4, tnuminteiroNode5, tpassoNode6, tnuminteiroNode7, tateNode8, tnuminteiroNode9, tfacaNode10, pcomandoNode11, tfimparaNode12, tpontovirgulaNode13);
        }
	nodeList.add(pdefinicaocomandoNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new31() /* reduce ADeclSeDefinicaoComando */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PDefinicaoComando pdefinicaocomandoNode1;
        {
            // Block
        TSe tseNode2;
        TLPar tlparNode3;
        PExpLogica pexplogicaNode4;
        TRPar trparNode5;
        TEntao tentaoNode6;
        PComando pcomandoNode7;
        POpcionalSenaoSe popcionalsenaoseNode8;
        TFimSe tfimseNode9;
        TPontoVirgula tpontovirgulaNode10;
        tseNode2 = (TSe)nodeArrayList1.get(0);
        tlparNode3 = (TLPar)nodeArrayList2.get(0);
        pexplogicaNode4 = (PExpLogica)nodeArrayList3.get(0);
        trparNode5 = (TRPar)nodeArrayList4.get(0);
        tentaoNode6 = (TEntao)nodeArrayList5.get(0);
        pcomandoNode7 = (PComando)nodeArrayList6.get(0);
        popcionalsenaoseNode8 = (POpcionalSenaoSe)nodeArrayList7.get(0);
        tfimseNode9 = (TFimSe)nodeArrayList8.get(0);
        tpontovirgulaNode10 = (TPontoVirgula)nodeArrayList9.get(0);

        pdefinicaocomandoNode1 = new ADeclSeDefinicaoComando(tseNode2, tlparNode3, pexplogicaNode4, trparNode5, tentaoNode6, pcomandoNode7, popcionalsenaoseNode8, tfimseNode9, tpontovirgulaNode10);
        }
	nodeList.add(pdefinicaocomandoNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new32() /* reduce AAopcionalsenaose1OpcionalSenaoSe */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        POpcionalSenaoSe popcionalsenaoseNode1;
        {
            // Block
        @SuppressWarnings("unused") Object nullNode2 = null;

        popcionalsenaoseNode1 = new AOpcionalSenaoSe(null);
        }
	nodeList.add(popcionalsenaoseNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new33() /* reduce AAopcionalsenaose2OpcionalSenaoSe */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        POpcionalSenaoSe popcionalsenaoseNode1;
        {
            // Block
        PSenaoSe psenaoseNode2;
        psenaoseNode2 = (PSenaoSe)nodeArrayList1.get(0);

        popcionalsenaoseNode1 = new AOpcionalSenaoSe(psenaoseNode2);
        }
	nodeList.add(popcionalsenaoseNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new34() /* reduce ASenaoSe */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PSenaoSe psenaoseNode1;
        {
            // Block
        TSenao tsenaoNode2;
        PComando pcomandoNode3;
        tsenaoNode2 = (TSenao)nodeArrayList1.get(0);
        pcomandoNode3 = (PComando)nodeArrayList2.get(0);

        psenaoseNode1 = new ASenaoSe(tsenaoNode2, pcomandoNode3);
        }
	nodeList.add(psenaoseNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new35() /* reduce AAopcionalsenaocaso1OpcionalSenaoCaso */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        POpcionalSenaoCaso popcionalsenaocasoNode1;
        {
            // Block
        @SuppressWarnings("unused") Object nullNode2 = null;

        popcionalsenaocasoNode1 = new AOpcionalSenaoCaso(null);
        }
	nodeList.add(popcionalsenaocasoNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new36() /* reduce AAopcionalsenaocaso2OpcionalSenaoCaso */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        POpcionalSenaoCaso popcionalsenaocasoNode1;
        {
            // Block
        PSenaoCaso psenaocasoNode2;
        psenaocasoNode2 = (PSenaoCaso)nodeArrayList1.get(0);

        popcionalsenaocasoNode1 = new AOpcionalSenaoCaso(psenaocasoNode2);
        }
	nodeList.add(popcionalsenaocasoNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new37() /* reduce ASenaoCaso */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PSenaoCaso psenaocasoNode1;
        {
            // Block
        TSenao tsenaoNode2;
        TDoisPontos tdoispontosNode3;
        PComando pcomandoNode4;
        tsenaoNode2 = (TSenao)nodeArrayList1.get(0);
        tdoispontosNode3 = (TDoisPontos)nodeArrayList2.get(0);
        pcomandoNode4 = (PComando)nodeArrayList3.get(0);

        psenaocasoNode1 = new ASenaoCaso(tsenaoNode2, tdoispontosNode3, pcomandoNode4);
        }
	nodeList.add(psenaocasoNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new38() /* reduce AAmultiplocaso1MultiploCaso */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        PMultiploCaso pmultiplocasoNode1;
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        }

        pmultiplocasoNode1 = new AMultiploCaso(listNode2);
        }
	nodeList.add(pmultiplocasoNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new39() /* reduce AAmultiplocaso2MultiploCaso */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PMultiploCaso pmultiplocasoNode1;
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        listNode2 = (LinkedList)nodeArrayList1.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }

        pmultiplocasoNode1 = new AMultiploCaso(listNode3);
        }
	nodeList.add(pmultiplocasoNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new40() /* reduce ADefinicaoCaso */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PDefinicaoCaso pdefinicaocasoNode1;
        {
            // Block
        TCaso tcasoNode2;
        PValor pvalorNode3;
        TDoisPontos tdoispontosNode4;
        PComando pcomandoNode5;
        tcasoNode2 = (TCaso)nodeArrayList1.get(0);
        pvalorNode3 = (PValor)nodeArrayList2.get(0);
        tdoispontosNode4 = (TDoisPontos)nodeArrayList3.get(0);
        pcomandoNode5 = (PComando)nodeArrayList4.get(0);

        pdefinicaocasoNode1 = new ADefinicaoCaso(tcasoNode2, pvalorNode3, tdoispontosNode4, pcomandoNode5);
        }
	nodeList.add(pdefinicaocasoNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new41() /* reduce AExpAritMultiExp */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PMultiExp pmultiexpNode1;
        {
            // Block
        PExp pexpNode2;
        TVirgula tvirgulaNode3;
        pexpNode2 = (PExp)nodeArrayList1.get(0);
        tvirgulaNode3 = (TVirgula)nodeArrayList2.get(0);

        pmultiexpNode1 = new AExpAritMultiExp(pexpNode2, tvirgulaNode3);
        }
	nodeList.add(pmultiexpNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new42() /* reduce AExpressaoLogicaMultiExp */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PMultiExp pmultiexpNode1;
        {
            // Block
        PExpLogica pexplogicaNode2;
        TVirgula tvirgulaNode3;
        pexplogicaNode2 = (PExpLogica)nodeArrayList1.get(0);
        tvirgulaNode3 = (TVirgula)nodeArrayList2.get(0);

        pmultiexpNode1 = new AExpressaoLogicaMultiExp(pexplogicaNode2, tvirgulaNode3);
        }
	nodeList.add(pmultiexpNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new43() /* reduce AMenosUnarioExp */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PExp pexpNode1;
        {
            // Block
        TMenos tmenosNode2;
        PExp pexpNode3;
        tmenosNode2 = (TMenos)nodeArrayList1.get(0);
        pexpNode3 = (PExp)nodeArrayList2.get(0);

        pexpNode1 = new AMenosUnarioExp(tmenosNode2, pexpNode3);
        }
	nodeList.add(pexpNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new44() /* reduce AExpressaoExp */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PExp pexpNode1;
        {
            // Block
        PExpressao pexpressaoNode2;
        pexpressaoNode2 = (PExpressao)nodeArrayList1.get(0);

        pexpNode1 = new AExpressaoExp(pexpressaoNode2);
        }
	nodeList.add(pexpNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new45() /* reduce ATermoExpressao */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PExpressao pexpressaoNode1;
        {
            // Block
        PTermo ptermoNode2;
        ptermoNode2 = (PTermo)nodeArrayList1.get(0);

        pexpressaoNode1 = new ATermoExpressao(ptermoNode2);
        }
	nodeList.add(pexpressaoNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new46() /* reduce AMaisExpressao */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PExpressao pexpressaoNode1;
        {
            // Block
        PExpressao pexpressaoNode2;
        TMais tmaisNode3;
        PTermo ptermoNode4;
        pexpressaoNode2 = (PExpressao)nodeArrayList1.get(0);
        tmaisNode3 = (TMais)nodeArrayList2.get(0);
        ptermoNode4 = (PTermo)nodeArrayList3.get(0);

        pexpressaoNode1 = new AMaisExpressao(pexpressaoNode2, tmaisNode3, ptermoNode4);
        }
	nodeList.add(pexpressaoNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new47() /* reduce AMenosExpressao */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PExpressao pexpressaoNode1;
        {
            // Block
        PExpressao pexpressaoNode2;
        TMenos tmenosNode3;
        PTermo ptermoNode4;
        pexpressaoNode2 = (PExpressao)nodeArrayList1.get(0);
        tmenosNode3 = (TMenos)nodeArrayList2.get(0);
        ptermoNode4 = (PTermo)nodeArrayList3.get(0);

        pexpressaoNode1 = new AMenosExpressao(pexpressaoNode2, tmenosNode3, ptermoNode4);
        }
	nodeList.add(pexpressaoNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new48() /* reduce AFatorTermo */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTermo ptermoNode1;
        {
            // Block
        PFator pfatorNode2;
        pfatorNode2 = (PFator)nodeArrayList1.get(0);

        ptermoNode1 = new AFatorTermo(pfatorNode2);
        }
	nodeList.add(ptermoNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new49() /* reduce AMultiplicacaoTermo */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTermo ptermoNode1;
        {
            // Block
        PTermo ptermoNode2;
        TMult tmultNode3;
        PFator pfatorNode4;
        ptermoNode2 = (PTermo)nodeArrayList1.get(0);
        tmultNode3 = (TMult)nodeArrayList2.get(0);
        pfatorNode4 = (PFator)nodeArrayList3.get(0);

        ptermoNode1 = new AMultiplicacaoTermo(ptermoNode2, tmultNode3, pfatorNode4);
        }
	nodeList.add(ptermoNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new50() /* reduce ADivisaoTermo */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTermo ptermoNode1;
        {
            // Block
        PTermo ptermoNode2;
        TDiv tdivNode3;
        PFator pfatorNode4;
        ptermoNode2 = (PTermo)nodeArrayList1.get(0);
        tdivNode3 = (TDiv)nodeArrayList2.get(0);
        pfatorNode4 = (PFator)nodeArrayList3.get(0);

        ptermoNode1 = new ADivisaoTermo(ptermoNode2, tdivNode3, pfatorNode4);
        }
	nodeList.add(ptermoNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new51() /* reduce AIdentificadorFator */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PFator pfatorNode1;
        {
            // Block
        TId tidNode2;
        tidNode2 = (TId)nodeArrayList1.get(0);

        pfatorNode1 = new AIdentificadorFator(tidNode2);
        }
	nodeList.add(pfatorNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new52() /* reduce AValorFator */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PFator pfatorNode1;
        {
            // Block
        PValor pvalorNode2;
        pvalorNode2 = (PValor)nodeArrayList1.get(0);

        pfatorNode1 = new AValorFator(pvalorNode2);
        }
	nodeList.add(pfatorNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new53() /* reduce AExpFator */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PFator pfatorNode1;
        {
            // Block
        TLPar tlparNode2;
        PExp pexpNode3;
        TRPar trparNode4;
        tlparNode2 = (TLPar)nodeArrayList1.get(0);
        pexpNode3 = (PExp)nodeArrayList2.get(0);
        trparNode4 = (TRPar)nodeArrayList3.get(0);

        pfatorNode1 = new AExpFator(tlparNode2, pexpNode3, trparNode4);
        }
	nodeList.add(pfatorNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new54() /* reduce ANegacaoExpLogica */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PExpLogica pexplogicaNode1;
        {
            // Block
        TNao tnaoNode2;
        PExpLogica pexplogicaNode3;
        tnaoNode2 = (TNao)nodeArrayList1.get(0);
        pexplogicaNode3 = (PExpLogica)nodeArrayList2.get(0);

        pexplogicaNode1 = new ANegacaoExpLogica(tnaoNode2, pexplogicaNode3);
        }
	nodeList.add(pexplogicaNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new55() /* reduce ALogicaExpLogica */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PExpLogica pexplogicaNode1;
        {
            // Block
        PLogica plogicaNode2;
        plogicaNode2 = (PLogica)nodeArrayList1.get(0);

        pexplogicaNode1 = new ALogicaExpLogica(plogicaNode2);
        }
	nodeList.add(pexplogicaNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new56() /* reduce AExpOuLogica */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PLogica plogicaNode1;
        {
            // Block
        PLogica plogicaNode2;
        TOu touNode3;
        PItem pitemNode4;
        plogicaNode2 = (PLogica)nodeArrayList1.get(0);
        touNode3 = (TOu)nodeArrayList2.get(0);
        pitemNode4 = (PItem)nodeArrayList3.get(0);

        plogicaNode1 = new AExpOuLogica(plogicaNode2, touNode3, pitemNode4);
        }
	nodeList.add(plogicaNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new57() /* reduce AItemOuLogica */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PLogica plogicaNode1;
        {
            // Block
        PItem pitemNode2;
        pitemNode2 = (PItem)nodeArrayList1.get(0);

        plogicaNode1 = new AItemOuLogica(pitemNode2);
        }
	nodeList.add(plogicaNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new58() /* reduce AExpXouItem */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PItem pitemNode1;
        {
            // Block
        PItem pitemNode2;
        TXou txouNode3;
        PLogTermo plogtermoNode4;
        pitemNode2 = (PItem)nodeArrayList1.get(0);
        txouNode3 = (TXou)nodeArrayList2.get(0);
        plogtermoNode4 = (PLogTermo)nodeArrayList3.get(0);

        pitemNode1 = new AExpXouItem(pitemNode2, txouNode3, plogtermoNode4);
        }
	nodeList.add(pitemNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new59() /* reduce AItemXouItem */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PItem pitemNode1;
        {
            // Block
        PLogTermo plogtermoNode2;
        plogtermoNode2 = (PLogTermo)nodeArrayList1.get(0);

        pitemNode1 = new AItemXouItem(plogtermoNode2);
        }
	nodeList.add(pitemNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new60() /* reduce AExpELogTermo */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PLogTermo plogtermoNode1;
        {
            // Block
        PLogTermo plogtermoNode2;
        TE teNode3;
        PRelacional prelacionalNode4;
        plogtermoNode2 = (PLogTermo)nodeArrayList1.get(0);
        teNode3 = (TE)nodeArrayList2.get(0);
        prelacionalNode4 = (PRelacional)nodeArrayList3.get(0);

        plogtermoNode1 = new AExpELogTermo(plogtermoNode2, teNode3, prelacionalNode4);
        }
	nodeList.add(plogtermoNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new61() /* reduce ARelacioLogTermo */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PLogTermo plogtermoNode1;
        {
            // Block
        PRelacional prelacionalNode2;
        prelacionalNode2 = (PRelacional)nodeArrayList1.get(0);

        plogtermoNode1 = new ARelacioLogTermo(prelacionalNode2);
        }
	nodeList.add(plogtermoNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new62() /* reduce AExpParLogTermo */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PLogTermo plogtermoNode1;
        {
            // Block
        TLPar tlparNode2;
        PExpLogica pexplogicaNode3;
        TRPar trparNode4;
        tlparNode2 = (TLPar)nodeArrayList1.get(0);
        pexplogicaNode3 = (PExpLogica)nodeArrayList2.get(0);
        trparNode4 = (TRPar)nodeArrayList3.get(0);

        plogtermoNode1 = new AExpParLogTermo(tlparNode2, pexplogicaNode3, trparNode4);
        }
	nodeList.add(plogtermoNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new63() /* reduce ARelacionalRelacional */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PRelacional prelacionalNode1;
        {
            // Block
        PExp pexpNode2;
        POperadores poperadoresNode3;
        PExp pexpNode4;
        pexpNode2 = (PExp)nodeArrayList1.get(0);
        poperadoresNode3 = (POperadores)nodeArrayList2.get(0);
        pexpNode4 = (PExp)nodeArrayList3.get(0);

        prelacionalNode1 = new ARelacionalRelacional(pexpNode2, poperadoresNode3, pexpNode4);
        }
	nodeList.add(prelacionalNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new64() /* reduce AIgualOperadores */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        POperadores poperadoresNode1;
        {
            // Block
        TIgualLog tiguallogNode2;
        tiguallogNode2 = (TIgualLog)nodeArrayList1.get(0);

        poperadoresNode1 = new AIgualOperadores(tiguallogNode2);
        }
	nodeList.add(poperadoresNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new65() /* reduce ADiferenteOperadores */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        POperadores poperadoresNode1;
        {
            // Block
        TDiferente tdiferenteNode2;
        tdiferenteNode2 = (TDiferente)nodeArrayList1.get(0);

        poperadoresNode1 = new ADiferenteOperadores(tdiferenteNode2);
        }
	nodeList.add(poperadoresNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new66() /* reduce AOperadores */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        POperadores poperadoresNode1;
        {
            // Block
        POper poperNode2;
        poperNode2 = (POper)nodeArrayList1.get(0);

        poperadoresNode1 = new AOperadores(poperNode2);
        }
	nodeList.add(poperadoresNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new67() /* reduce AMenorOper */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        POper poperNode1;
        {
            // Block
        TMenor tmenorNode2;
        tmenorNode2 = (TMenor)nodeArrayList1.get(0);

        poperNode1 = new AMenorOper(tmenorNode2);
        }
	nodeList.add(poperNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new68() /* reduce AMaiorOper */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        POper poperNode1;
        {
            // Block
        TMaior tmaiorNode2;
        tmaiorNode2 = (TMaior)nodeArrayList1.get(0);

        poperNode1 = new AMaiorOper(tmaiorNode2);
        }
	nodeList.add(poperNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new69() /* reduce AMenorIgualOper */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        POper poperNode1;
        {
            // Block
        TMenorIgual tmenorigualNode2;
        tmenorigualNode2 = (TMenorIgual)nodeArrayList1.get(0);

        poperNode1 = new AMenorIgualOper(tmenorigualNode2);
        }
	nodeList.add(poperNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new70() /* reduce AMaiorIgualOper */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        POper poperNode1;
        {
            // Block
        TMaiorIgual tmaiorigualNode2;
        tmaiorigualNode2 = (TMaiorIgual)nodeArrayList1.get(0);

        poperNode1 = new AMaiorIgualOper(tmaiorigualNode2);
        }
	nodeList.add(poperNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new71() /* reduce ATerminal$MultiIdentificador */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PMultiIdentificador pmultiidentificadorNode1;
        pmultiidentificadorNode1 = (PMultiIdentificador)nodeArrayList1.get(0);
	if(pmultiidentificadorNode1 != null)
	{
	  listNode2.add(pmultiidentificadorNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new72() /* reduce ANonTerminal$MultiIdentificador */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        PMultiIdentificador pmultiidentificadorNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pmultiidentificadorNode2 = (PMultiIdentificador)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pmultiidentificadorNode2 != null)
	{
	  listNode3.add(pmultiidentificadorNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new73() /* reduce ATerminal$DefinicaoCaso */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PDefinicaoCaso pdefinicaocasoNode1;
        pdefinicaocasoNode1 = (PDefinicaoCaso)nodeArrayList1.get(0);
	if(pdefinicaocasoNode1 != null)
	{
	  listNode2.add(pdefinicaocasoNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new74() /* reduce ANonTerminal$DefinicaoCaso */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        PDefinicaoCaso pdefinicaocasoNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pdefinicaocasoNode2 = (PDefinicaoCaso)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pdefinicaocasoNode2 != null)
	{
	  listNode3.add(pdefinicaocasoNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new75() /* reduce ATerminal$MultiExp */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PMultiExp pmultiexpNode1;
        pmultiexpNode1 = (PMultiExp)nodeArrayList1.get(0);
	if(pmultiexpNode1 != null)
	{
	  listNode2.add(pmultiexpNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new76() /* reduce ANonTerminal$MultiExp */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        PMultiExp pmultiexpNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pmultiexpNode2 = (PMultiExp)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pmultiexpNode2 != null)
	{
	  listNode3.add(pmultiexpNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    private static int[][][] actionTable;
/*      {
			{{-1, ERROR, 0}, {29, SHIFT, 1}, },
			{{-1, ERROR, 1}, {54, SHIFT, 3}, },
			{{-1, ERROR, 2}, {55, ACCEPT, -1}, },
			{{-1, ERROR, 3}, {31, SHIFT, 4}, },
			{{-1, ERROR, 4}, {3, SHIFT, 5}, {51, SHIFT, 6}, {52, SHIFT, 7}, {53, SHIFT, 8}, },
			{{-1, ERROR, 5}, {54, SHIFT, 12}, },
			{{-1, REDUCE, 13}, },
			{{-1, REDUCE, 12}, },
			{{-1, REDUCE, 11}, },
			{{-1, ERROR, 9}, {37, SHIFT, 14}, {38, SHIFT, 15}, {39, SHIFT, 16}, {44, SHIFT, 17}, {47, SHIFT, 18}, {48, SHIFT, 19}, {49, SHIFT, 20}, {51, SHIFT, 6}, {52, SHIFT, 7}, {53, SHIFT, 8}, {54, SHIFT, 12}, },
			{{-1, REDUCE, 1}, },
			{{-1, ERROR, 11}, {7, SHIFT, 25}, },
			{{-1, REDUCE, 6}, {11, SHIFT, 26}, },
			{{-1, ERROR, 13}, {0, SHIFT, 27}, {1, SHIFT, 28}, {2, SHIFT, 29}, },
			{{-1, ERROR, 14}, {9, SHIFT, 31}, },
			{{-1, ERROR, 15}, {9, SHIFT, 32}, },
			{{-1, ERROR, 16}, {54, SHIFT, 12}, },
			{{-1, ERROR, 17}, {37, SHIFT, 14}, {38, SHIFT, 15}, {39, SHIFT, 16}, {44, SHIFT, 17}, {47, SHIFT, 18}, {48, SHIFT, 19}, {49, SHIFT, 20}, {54, SHIFT, 12}, },
			{{-1, ERROR, 18}, {9, SHIFT, 35}, },
			{{-1, ERROR, 19}, {9, SHIFT, 36}, },
			{{-1, ERROR, 20}, {9, SHIFT, 37}, },
			{{-1, REDUCE, 2}, },
			{{-1, ERROR, 22}, {17, SHIFT, 38}, },
			{{-1, ERROR, 23}, {32, SHIFT, 39}, {37, SHIFT, 14}, {38, SHIFT, 15}, {39, SHIFT, 16}, {44, SHIFT, 17}, {47, SHIFT, 18}, {48, SHIFT, 19}, {49, SHIFT, 20}, {54, SHIFT, 12}, },
			{{-1, REDUCE, 15}, },
			{{-1, ERROR, 25}, {54, SHIFT, 12}, },
			{{-1, ERROR, 26}, {0, SHIFT, 44}, },
			{{-1, REDUCE, 9}, },
			{{-1, REDUCE, 10}, },
			{{-1, REDUCE, 8}, },
			{{-1, ERROR, 30}, {8, SHIFT, 45}, },
			{{-1, ERROR, 31}, {0, SHIFT, 27}, {1, SHIFT, 28}, {2, SHIFT, 29}, {9, SHIFT, 46}, {16, SHIFT, 47}, {28, SHIFT, 48}, {54, SHIFT, 49}, },
			{{-1, ERROR, 32}, {0, SHIFT, 27}, {1, SHIFT, 28}, {2, SHIFT, 29}, {9, SHIFT, 46}, {16, SHIFT, 47}, {28, SHIFT, 48}, {54, SHIFT, 49}, },
			{{-1, ERROR, 33}, {40, SHIFT, 61}, },
			{{-1, ERROR, 34}, {37, SHIFT, 14}, {38, SHIFT, 15}, {39, SHIFT, 16}, {44, SHIFT, 17}, {45, SHIFT, 62}, {47, SHIFT, 18}, {48, SHIFT, 19}, {49, SHIFT, 20}, {54, SHIFT, 12}, },
			{{-1, ERROR, 35}, {0, SHIFT, 27}, {1, SHIFT, 28}, {2, SHIFT, 29}, {9, SHIFT, 46}, {16, SHIFT, 47}, {28, SHIFT, 48}, {54, SHIFT, 49}, },
			{{-1, ERROR, 36}, {54, SHIFT, 12}, },
			{{-1, ERROR, 37}, {0, SHIFT, 27}, {1, SHIFT, 28}, {2, SHIFT, 29}, {9, SHIFT, 46}, {16, SHIFT, 47}, {28, SHIFT, 48}, {54, SHIFT, 49}, },
			{{-1, ERROR, 38}, {0, SHIFT, 27}, {1, SHIFT, 28}, {2, SHIFT, 29}, {9, SHIFT, 46}, {16, SHIFT, 47}, {28, SHIFT, 48}, {54, SHIFT, 49}, },
			{{-1, REDUCE, 0}, },
			{{-1, REDUCE, 16}, },
			{{-1, ERROR, 41}, {5, SHIFT, 73}, {8, SHIFT, 74}, },
			{{-1, REDUCE, 71}, },
			{{-1, ERROR, 43}, {54, SHIFT, 12}, },
			{{-1, ERROR, 44}, {12, SHIFT, 77}, },
			{{-1, REDUCE, 3}, },
			{{-1, ERROR, 46}, {0, SHIFT, 27}, {1, SHIFT, 28}, {2, SHIFT, 29}, {9, SHIFT, 46}, {16, SHIFT, 47}, {28, SHIFT, 48}, {54, SHIFT, 49}, },
			{{-1, ERROR, 47}, {0, SHIFT, 27}, {1, SHIFT, 28}, {2, SHIFT, 29}, {9, SHIFT, 80}, {16, SHIFT, 47}, {54, SHIFT, 49}, },
			{{-1, ERROR, 48}, {0, SHIFT, 27}, {1, SHIFT, 28}, {2, SHIFT, 29}, {9, SHIFT, 46}, {16, SHIFT, 47}, {28, SHIFT, 48}, {54, SHIFT, 49}, },
			{{-1, REDUCE, 51}, },
			{{-1, REDUCE, 52}, },
			{{-1, ERROR, 51}, {19, SHIFT, 83}, {20, SHIFT, 84}, {21, SHIFT, 85}, {22, SHIFT, 86}, {23, SHIFT, 87}, {24, SHIFT, 88}, },
			{{-1, REDUCE, 44}, {15, SHIFT, 91}, {16, SHIFT, 92}, },
			{{-1, REDUCE, 45}, {13, SHIFT, 93}, {14, SHIFT, 94}, },
			{{-1, REDUCE, 48}, },
			{{-1, ERROR, 55}, {10, SHIFT, 95}, },
			{{-1, REDUCE, 55}, {26, SHIFT, 96}, },
			{{-1, REDUCE, 57}, {27, SHIFT, 97}, },
			{{-1, REDUCE, 59}, {25, SHIFT, 98}, },
			{{-1, REDUCE, 61}, },
			{{-1, ERROR, 60}, {10, SHIFT, 99}, },
			{{-1, ERROR, 61}, {0, SHIFT, 100}, },
			{{-1, ERROR, 62}, {9, SHIFT, 101}, },
			{{-1, REDUCE, 75}, },
			{{-1, ERROR, 64}, {5, SHIFT, 102}, {10, SHIFT, 103}, {19, SHIFT, 83}, {20, SHIFT, 84}, {21, SHIFT, 85}, {22, SHIFT, 86}, {23, SHIFT, 87}, {24, SHIFT, 88}, },
			{{-1, ERROR, 65}, {5, SHIFT, 104}, {10, SHIFT, 105}, },
			{{-1, ERROR, 66}, {0, SHIFT, 27}, {1, SHIFT, 28}, {2, SHIFT, 29}, {9, SHIFT, 46}, {16, SHIFT, 47}, {28, SHIFT, 48}, {54, SHIFT, 49}, },
			{{-1, ERROR, 67}, {5, SHIFT, 73}, {10, SHIFT, 109}, },
			{{-1, ERROR, 68}, {54, SHIFT, 12}, },
			{{-1, ERROR, 69}, {10, SHIFT, 111}, {19, SHIFT, 83}, {20, SHIFT, 84}, {21, SHIFT, 85}, {22, SHIFT, 86}, {23, SHIFT, 87}, {24, SHIFT, 88}, },
			{{-1, ERROR, 70}, {10, SHIFT, 112}, },
			{{-1, ERROR, 71}, {8, SHIFT, 113}, {19, SHIFT, 83}, {20, SHIFT, 84}, {21, SHIFT, 85}, {22, SHIFT, 86}, {23, SHIFT, 87}, {24, SHIFT, 88}, },
			{{-1, ERROR, 72}, {8, SHIFT, 114}, },
			{{-1, REDUCE, 14}, },
			{{-1, REDUCE, 4}, },
			{{-1, ERROR, 75}, {5, SHIFT, 73}, {8, SHIFT, 115}, },
			{{-1, REDUCE, 72}, },
			{{-1, REDUCE, 7}, },
			{{-1, ERROR, 78}, {10, SHIFT, 116}, {19, SHIFT, 83}, {20, SHIFT, 84}, {21, SHIFT, 85}, {22, SHIFT, 86}, {23, SHIFT, 87}, {24, SHIFT, 88}, },
			{{-1, ERROR, 79}, {10, SHIFT, 117}, },
			{{-1, ERROR, 80}, {0, SHIFT, 27}, {1, SHIFT, 28}, {2, SHIFT, 29}, {9, SHIFT, 80}, {16, SHIFT, 47}, {54, SHIFT, 49}, },
			{{-1, REDUCE, 43}, },
			{{-1, REDUCE, 54}, },
			{{-1, REDUCE, 64}, },
			{{-1, REDUCE, 65}, },
			{{-1, REDUCE, 67}, },
			{{-1, REDUCE, 69}, },
			{{-1, REDUCE, 68}, },
			{{-1, REDUCE, 70}, },
			{{-1, ERROR, 89}, {0, SHIFT, 27}, {1, SHIFT, 28}, {2, SHIFT, 29}, {9, SHIFT, 80}, {16, SHIFT, 47}, {54, SHIFT, 49}, },
			{{-1, REDUCE, 66}, },
			{{-1, ERROR, 91}, {0, SHIFT, 27}, {1, SHIFT, 28}, {2, SHIFT, 29}, {9, SHIFT, 80}, {54, SHIFT, 49}, },
			{{-1, ERROR, 92}, {0, SHIFT, 27}, {1, SHIFT, 28}, {2, SHIFT, 29}, {9, SHIFT, 80}, {54, SHIFT, 49}, },
			{{-1, ERROR, 93}, {0, SHIFT, 27}, {1, SHIFT, 28}, {2, SHIFT, 29}, {9, SHIFT, 80}, {54, SHIFT, 49}, },
			{{-1, ERROR, 94}, {0, SHIFT, 27}, {1, SHIFT, 28}, {2, SHIFT, 29}, {9, SHIFT, 80}, {54, SHIFT, 49}, },
			{{-1, ERROR, 95}, {41, SHIFT, 124}, },
			{{-1, ERROR, 96}, {0, SHIFT, 27}, {1, SHIFT, 28}, {2, SHIFT, 29}, {9, SHIFT, 46}, {16, SHIFT, 47}, {54, SHIFT, 49}, },
			{{-1, ERROR, 97}, {0, SHIFT, 27}, {1, SHIFT, 28}, {2, SHIFT, 29}, {9, SHIFT, 46}, {16, SHIFT, 47}, {54, SHIFT, 49}, },
			{{-1, ERROR, 98}, {0, SHIFT, 27}, {1, SHIFT, 28}, {2, SHIFT, 29}, {9, SHIFT, 80}, {16, SHIFT, 47}, {54, SHIFT, 49}, },
			{{-1, ERROR, 99}, {42, SHIFT, 128}, },
			{{-1, ERROR, 100}, {45, SHIFT, 129}, {46, SHIFT, 130}, },
			{{-1, ERROR, 101}, {0, SHIFT, 27}, {1, SHIFT, 28}, {2, SHIFT, 29}, {9, SHIFT, 46}, {16, SHIFT, 47}, {28, SHIFT, 48}, {54, SHIFT, 49}, },
			{{-1, REDUCE, 41}, },
			{{-1, ERROR, 103}, {8, SHIFT, 132}, },
			{{-1, REDUCE, 42}, },
			{{-1, ERROR, 105}, {8, SHIFT, 133}, },
			{{-1, REDUCE, 76}, },
			{{-1, ERROR, 107}, {5, SHIFT, 102}, {10, SHIFT, 134}, {19, SHIFT, 83}, {20, SHIFT, 84}, {21, SHIFT, 85}, {22, SHIFT, 86}, {23, SHIFT, 87}, {24, SHIFT, 88}, },
			{{-1, ERROR, 108}, {5, SHIFT, 104}, {10, SHIFT, 135}, },
			{{-1, ERROR, 109}, {8, SHIFT, 136}, },
			{{-1, ERROR, 110}, {5, SHIFT, 73}, {10, SHIFT, 137}, },
			{{-1, REDUCE, 38}, {50, SHIFT, 138}, },
			{{-1, REDUCE, 38}, {50, SHIFT, 138}, },
			{{-1, REDUCE, 17}, },
			{{-1, REDUCE, 18}, },
			{{-1, REDUCE, 5}, },
			{{-1, REDUCE, 53}, },
			{{-1, REDUCE, 62}, },
			{{-1, ERROR, 118}, {10, SHIFT, 116}, },
			{{-1, REDUCE, 63}, },
			{{-1, REDUCE, 46}, {13, SHIFT, 93}, {14, SHIFT, 94}, },
			{{-1, REDUCE, 47}, {13, SHIFT, 93}, {14, SHIFT, 94}, },
			{{-1, REDUCE, 49}, },
			{{-1, REDUCE, 50}, },
			{{-1, ERROR, 124}, {37, SHIFT, 14}, {38, SHIFT, 15}, {39, SHIFT, 16}, {44, SHIFT, 17}, {47, SHIFT, 18}, {48, SHIFT, 19}, {49, SHIFT, 20}, {54, SHIFT, 12}, },
			{{-1, REDUCE, 56}, {27, SHIFT, 97}, },
			{{-1, REDUCE, 58}, {25, SHIFT, 98}, },
			{{-1, REDUCE, 60}, },
			{{-1, ERROR, 128}, {37, SHIFT, 14}, {38, SHIFT, 15}, {39, SHIFT, 16}, {44, SHIFT, 17}, {47, SHIFT, 18}, {48, SHIFT, 19}, {49, SHIFT, 20}, {54, SHIFT, 12}, },
			{{-1, ERROR, 129}, {0, SHIFT, 145}, },
			{{-1, ERROR, 130}, {0, SHIFT, 146}, },
			{{-1, ERROR, 131}, {10, SHIFT, 147}, },
			{{-1, REDUCE, 21}, },
			{{-1, REDUCE, 23}, },
			{{-1, ERROR, 134}, {8, SHIFT, 148}, },
			{{-1, ERROR, 135}, {8, SHIFT, 149}, },
			{{-1, REDUCE, 19}, },
			{{-1, ERROR, 137}, {8, SHIFT, 150}, },
			{{-1, ERROR, 138}, {0, SHIFT, 27}, {1, SHIFT, 28}, {2, SHIFT, 29}, },
			{{-1, REDUCE, 35}, {43, SHIFT, 152}, },
			{{-1, REDUCE, 73}, },
			{{-1, REDUCE, 39}, {50, SHIFT, 138}, },
			{{-1, REDUCE, 35}, {43, SHIFT, 152}, },
			{{-1, REDUCE, 32}, {37, SHIFT, 14}, {38, SHIFT, 15}, {39, SHIFT, 16}, {43, SHIFT, 157}, {44, SHIFT, 17}, {47, SHIFT, 18}, {48, SHIFT, 19}, {49, SHIFT, 20}, {54, SHIFT, 12}, },
			{{-1, ERROR, 144}, {34, SHIFT, 160}, {37, SHIFT, 14}, {38, SHIFT, 15}, {39, SHIFT, 16}, {44, SHIFT, 17}, {47, SHIFT, 18}, {48, SHIFT, 19}, {49, SHIFT, 20}, {54, SHIFT, 12}, },
			{{-1, ERROR, 145}, {42, SHIFT, 161}, },
			{{-1, ERROR, 146}, {45, SHIFT, 162}, },
			{{-1, ERROR, 147}, {8, SHIFT, 163}, },
			{{-1, REDUCE, 22}, },
			{{-1, REDUCE, 24}, },
			{{-1, REDUCE, 20}, },
			{{-1, ERROR, 151}, {7, SHIFT, 164}, },
			{{-1, ERROR, 152}, {7, SHIFT, 165}, },
			{{-1, ERROR, 153}, {36, SHIFT, 166}, },
			{{-1, REDUCE, 36}, },
			{{-1, REDUCE, 74}, },
			{{-1, ERROR, 156}, {36, SHIFT, 167}, },
			{{-1, ERROR, 157}, {37, SHIFT, 14}, {38, SHIFT, 15}, {39, SHIFT, 16}, {44, SHIFT, 17}, {47, SHIFT, 18}, {48, SHIFT, 19}, {49, SHIFT, 20}, {54, SHIFT, 12}, },
			{{-1, ERROR, 158}, {35, SHIFT, 169}, },
			{{-1, REDUCE, 33}, },
			{{-1, ERROR, 160}, {8, SHIFT, 170}, },
			{{-1, ERROR, 161}, {37, SHIFT, 14}, {38, SHIFT, 15}, {39, SHIFT, 16}, {44, SHIFT, 17}, {47, SHIFT, 18}, {48, SHIFT, 19}, {49, SHIFT, 20}, {54, SHIFT, 12}, },
			{{-1, ERROR, 162}, {0, SHIFT, 172}, },
			{{-1, REDUCE, 28}, },
			{{-1, ERROR, 164}, {37, SHIFT, 14}, {38, SHIFT, 15}, {39, SHIFT, 16}, {44, SHIFT, 17}, {47, SHIFT, 18}, {48, SHIFT, 19}, {49, SHIFT, 20}, {54, SHIFT, 12}, },
			{{-1, ERROR, 165}, {37, SHIFT, 14}, {38, SHIFT, 15}, {39, SHIFT, 16}, {44, SHIFT, 17}, {47, SHIFT, 18}, {48, SHIFT, 19}, {49, SHIFT, 20}, {54, SHIFT, 12}, },
			{{-1, ERROR, 166}, {8, SHIFT, 175}, },
			{{-1, ERROR, 167}, {8, SHIFT, 176}, },
			{{-1, REDUCE, 34}, {37, SHIFT, 14}, {38, SHIFT, 15}, {39, SHIFT, 16}, {44, SHIFT, 17}, {47, SHIFT, 18}, {48, SHIFT, 19}, {49, SHIFT, 20}, {54, SHIFT, 12}, },
			{{-1, ERROR, 169}, {8, SHIFT, 177}, },
			{{-1, REDUCE, 27}, },
			{{-1, ERROR, 171}, {33, SHIFT, 178}, {37, SHIFT, 14}, {38, SHIFT, 15}, {39, SHIFT, 16}, {44, SHIFT, 17}, {47, SHIFT, 18}, {48, SHIFT, 19}, {49, SHIFT, 20}, {54, SHIFT, 12}, },
			{{-1, ERROR, 172}, {42, SHIFT, 179}, },
			{{-1, REDUCE, 40}, {37, SHIFT, 14}, {38, SHIFT, 15}, {39, SHIFT, 16}, {44, SHIFT, 17}, {47, SHIFT, 18}, {48, SHIFT, 19}, {49, SHIFT, 20}, {54, SHIFT, 12}, },
			{{-1, REDUCE, 37}, {37, SHIFT, 14}, {38, SHIFT, 15}, {39, SHIFT, 16}, {44, SHIFT, 17}, {47, SHIFT, 18}, {48, SHIFT, 19}, {49, SHIFT, 20}, {54, SHIFT, 12}, },
			{{-1, REDUCE, 25}, },
			{{-1, REDUCE, 26}, },
			{{-1, REDUCE, 31}, },
			{{-1, ERROR, 178}, {8, SHIFT, 180}, },
			{{-1, ERROR, 179}, {37, SHIFT, 14}, {38, SHIFT, 15}, {39, SHIFT, 16}, {44, SHIFT, 17}, {47, SHIFT, 18}, {48, SHIFT, 19}, {49, SHIFT, 20}, {54, SHIFT, 12}, },
			{{-1, REDUCE, 29}, },
			{{-1, ERROR, 181}, {33, SHIFT, 182}, {37, SHIFT, 14}, {38, SHIFT, 15}, {39, SHIFT, 16}, {44, SHIFT, 17}, {47, SHIFT, 18}, {48, SHIFT, 19}, {49, SHIFT, 20}, {54, SHIFT, 12}, },
			{{-1, ERROR, 182}, {8, SHIFT, 183}, },
			{{-1, REDUCE, 30}, },
        };*/
    private static int[][][] gotoTable;
/*      {
			{{-1, 2}, },
			{{-1, 9}, },
			{{-1, 10}, {9, 21}, },
			{{-1, 22}, {5, 13}, {16, 33}, {25, 41}, {36, 67}, {43, 75}, {68, 110}, },
			{{-1, 50}, {13, 30}, {138, 151}, },
			{{-1, 11}, },
			{{-1, 42}, {43, 76}, {68, 76}, },
			{{-1, 23}, {17, 34}, {124, 143}, {128, 144}, {157, 168}, {161, 171}, {164, 173}, {165, 174}, {179, 181}, },
			{{-1, 24}, {23, 40}, {34, 40}, {143, 40}, {144, 40}, {168, 40}, {171, 40}, {173, 40}, {174, 40}, {181, 40}, },
			{{-1, 158}, },
			{{-1, 159}, },
			{{-1, 153}, {142, 156}, },
			{{-1, 154}, },
			{{-1, 139}, {112, 142}, },
			{{-1, 140}, {141, 155}, },
			{{-1, 63}, {66, 106}, },
			{{-1, 51}, {35, 64}, {37, 69}, {38, 71}, {46, 78}, {47, 81}, {66, 107}, {80, 118}, {89, 119}, },
			{{-1, 52}, },
			{{-1, 53}, {91, 120}, {92, 121}, },
			{{-1, 54}, {93, 122}, {94, 123}, },
			{{-1, 55}, {32, 60}, {35, 65}, {37, 70}, {38, 72}, {46, 79}, {48, 82}, {66, 108}, {101, 131}, },
			{{-1, 56}, },
			{{-1, 57}, {96, 125}, },
			{{-1, 58}, {97, 126}, },
			{{-1, 59}, {98, 127}, },
			{{-1, 89}, },
			{{-1, 90}, },
			{{-1, 43}, {36, 68}, },
			{{-1, 141}, },
			{{-1, 66}, },
        };*/
    private static String[] errorMessages;
/*      {
			"expecting: 'programa'",
			"expecting: id",
			"expecting: EOF",
			"expecting: 'inicio'",
			"expecting: 'constante', 'caractere', 'inteiro', 'real'",
			"expecting: ':'",
			"expecting: 'se', 'enquanto', 'para', 'repita', 'escreva', 'leia', 'avalie', 'caractere', 'inteiro', 'real', id",
			"expecting: num inteiro, num real, string, ',', ';', ')', '[', '<-', 'de'",
			"expecting: num inteiro, num real, string",
			"expecting: '('",
			"expecting: 'se', 'enquanto', 'para', 'repita', 'escreva', 'leia', 'avalie', id",
			"expecting: '<-'",
			"expecting: 'fim.', 'se', 'enquanto', 'para', 'repita', 'escreva', 'leia', 'avalie', id",
			"expecting: 'fim.', fim para, fim enquanto, fim se, fim avalie, 'se', 'enquanto', 'para', 'senao', 'repita', 'ate', 'escreva', 'leia', 'avalie', 'caso', id",
			"expecting: num inteiro",
			"expecting: ',', ':', ';', ')', '*', '/', '+', '-', '==', '<>', '<', '<=', '>', '>=', 'e', 'ou', 'xou'",
			"expecting: ';'",
			"expecting: num inteiro, num real, string, '(', '-', 'nao', id",
			"expecting: 'de'",
			"expecting: 'se', 'enquanto', 'para', 'repita', 'ate', 'escreva', 'leia', 'avalie', id",
			"expecting: ',', ';'",
			"expecting: ']'",
			"expecting: num inteiro, num real, string, '(', '-', id",
			"expecting: ',', ';', ')', '*', '/', '+', '-', '==', '<>', '<', '<=', '>', '>=', 'e', 'ou', 'xou'",
			"expecting: '==', '<>', '<', '<=', '>', '>='",
			"expecting: ',', ';', ')', '+', '-', '==', '<>', '<', '<=', '>', '>=', 'e', 'ou', 'xou'",
			"expecting: ')'",
			"expecting: ',', ';', ')', 'ou'",
			"expecting: ',', ';', ')', 'ou', 'xou'",
			"expecting: ',', ';', ')', 'e', 'ou', 'xou'",
			"expecting: ',', ')', '==', '<>', '<', '<=', '>', '>='",
			"expecting: ',', ')'",
			"expecting: ')', '==', '<>', '<', '<=', '>', '>='",
			"expecting: ';', '==', '<>', '<', '<=', '>', '>='",
			"expecting: num inteiro, num real, string, ',', ';', ')', '<-', 'de'",
			"expecting: ',', ';', ')', '==', '<>', '<', '<=', '>', '>=', 'e', 'ou', 'xou'",
			"expecting: ',', ';', ')'",
			"expecting: num inteiro, num real, string, '(', id",
			"expecting: 'entao'",
			"expecting: 'faca'",
			"expecting: 'ate', 'passo'",
			"expecting: fim avalie, 'senao', 'caso'",
			"expecting: fim avalie, 'senao'",
			"expecting: fim se, 'se', 'enquanto', 'para', 'senao', 'repita', 'escreva', 'leia', 'avalie', id",
			"expecting: fim enquanto, 'se', 'enquanto', 'para', 'repita', 'escreva', 'leia', 'avalie', id",
			"expecting: 'ate'",
			"expecting: fim avalie",
			"expecting: fim se",
			"expecting: fim se, 'se', 'enquanto', 'para', 'repita', 'escreva', 'leia', 'avalie', id",
			"expecting: fim para, 'se', 'enquanto', 'para', 'repita', 'escreva', 'leia', 'avalie', id",
			"expecting: fim avalie, 'se', 'enquanto', 'para', 'senao', 'repita', 'escreva', 'leia', 'avalie', 'caso', id",
			"expecting: fim avalie, 'se', 'enquanto', 'para', 'repita', 'escreva', 'leia', 'avalie', id",
        };*/
    private static int[] errors;
/*      {
			0, 1, 2, 3, 4, 1, 5, 5, 5, 6, 6, 5, 7, 8, 9, 9, 1, 10, 9, 9, 9, 6, 11, 12, 13, 1, 14, 15, 15, 15, 16, 17, 17, 18, 19, 17, 1, 17, 17, 2, 13, 20, 1, 1, 21, 6, 17, 22, 17, 23, 23, 24, 25, 23, 23, 26, 27, 28, 29, 29, 26, 14, 9, 17, 30, 31, 17, 31, 1, 32, 26, 33, 16, 1, 6, 20, 1, 34, 32, 26, 22, 35, 36, 22, 22, 22, 22, 22, 22, 22, 22, 37, 37, 37, 37, 38, 22, 22, 22, 39, 40, 17, 17, 16, 17, 16, 17, 30, 31, 16, 31, 41, 41, 13, 13, 6, 23, 29, 26, 29, 23, 23, 23, 23, 10, 28, 29, 29, 10, 14, 14, 26, 13, 13, 16, 16, 13, 16, 8, 42, 41, 41, 42, 43, 44, 39, 45, 16, 13, 13, 13, 5, 5, 46, 46, 41, 46, 10, 47, 47, 16, 10, 14, 13, 10, 10, 16, 16, 48, 16, 13, 49, 39, 50, 51, 13, 13, 13, 16, 10, 13, 49, 16, 13, 
        };*/

    static 
    {
        try
        {
            DataInputStream s = new DataInputStream(
                new BufferedInputStream(
                Parser.class.getResourceAsStream("parser.dat")));

            // read actionTable
            int length = s.readInt();
            Parser.actionTable = new int[length][][];
            for(int i = 0; i < Parser.actionTable.length; i++)
            {
                length = s.readInt();
                Parser.actionTable[i] = new int[length][3];
                for(int j = 0; j < Parser.actionTable[i].length; j++)
                {
                for(int k = 0; k < 3; k++)
                {
                    Parser.actionTable[i][j][k] = s.readInt();
                }
                }
            }

            // read gotoTable
            length = s.readInt();
            gotoTable = new int[length][][];
            for(int i = 0; i < gotoTable.length; i++)
            {
                length = s.readInt();
                gotoTable[i] = new int[length][2];
                for(int j = 0; j < gotoTable[i].length; j++)
                {
                for(int k = 0; k < 2; k++)
                {
                    gotoTable[i][j][k] = s.readInt();
                }
                }
            }

            // read errorMessages
            length = s.readInt();
            errorMessages = new String[length];
            for(int i = 0; i < errorMessages.length; i++)
            {
                length = s.readInt();
                StringBuffer buffer = new StringBuffer();

                for(int j = 0; j < length; j++)
                {
                buffer.append(s.readChar());
                }
                errorMessages[i] = buffer.toString();
            }

            // read errors
            length = s.readInt();
            errors = new int[length];
            for(int i = 0; i < errors.length; i++)
            {
                errors[i] = s.readInt();
            }

            s.close();
        }
        catch(Exception e)
        {
            throw new RuntimeException("The file \"parser.dat\" is either missing or corrupted.");
        }
    }
}
